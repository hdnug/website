@model Hdnug.Web.Areas.Admin.Models.ViewModels.SpeakerViewModel

<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Email)
        @Html.ValidationMessageFor(model => model.Email)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Phone)
        @Html.ValidationMessageFor(model => model.Phone)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.WebSiteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.WebSiteUrl)
        @Html.ValidationMessageFor(model => model.WebSiteUrl)
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.PhotoUrl))
{
    <div class="form-group">
        <label>Photo</label>
        <div class="float-left">
            <img id="pic" src="@Url.Content(Model.PhotoUrl)" style="width: 150px; margin-bottom: 10px" />
            <div>
                <label for="Photo" class="small button" style="width: 48%">Change</label>
                <input id="Photo" name="Photo" class="show-for-sr" type="file" />
                <button id="clearButton" class="small button secondary" style="width: 48%">Clear</button>
            </div>
        </div>
        <div id="fileName" style="float: left; margin-left: 10px"></div>
        <div class="clearfix"></div>
    </div>
}
else
{
    <div class="form-group">
        <label>Photo</label>
        <div class="float-left">
            <img src="http://placehold.it/150x150" style="width: 150px; margin-bottom: 10px" />
            <div>
                <label for="Photo" class="small button" style="width: 100%">Upload</label>
                <input id="Photo" name="Photo" class="show-for-sr" type="file" />
            </div>
        </div>
        <div id="fileName" style="float: left; margin-left: 10px"></div>
        <div class="clearfix"></div>
    </div>
}

@Html.HiddenFor(x => x.PhotoId)
@Html.HiddenFor(x => x.ImageIsCleared)
    <script>
        function updateName() {
            var fileName = document.getElementById("Photo").files[0].name;
            document.getElementById("fileName").innerHTML = fileName;
        }
        function clearImage(e) {
            e.preventDefault();
            document.getElementById("pic").src = "http://placehold.it/150x150"
            document.getElementById("ImageIsCleared").setAttribute("value", true);
        }
        document.getElementById('Photo').addEventListener('change', updateName, false);
        var clearButton = document.getElementById('clearButton');
        if (clearButton !== null) {
            clearButton.addEventListener('click', clearImage, false);
        }
        
    </script>

    <div class="form-group">
        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Bio)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>